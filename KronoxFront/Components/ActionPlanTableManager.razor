@using KronoxFront.ViewModels
@using Microsoft.AspNetCore.Components.Forms
@inject IJSRuntime JS
@inject ILogger<ActionPlanTableManager> Logger

<div class="card mb-4">
    <div class="card-header bg-light d-flex justify-content-between align-items-center">
        <h3 class="mb-0 text-center">Handlingsplan</h3>
        @if (IsAdminMode)
        {
            <button type="button" class="btn btn-outline-primary btn-sm" @onclick="AddNewItem">
                <i class="fa-solid fa-plus me-1"></i> Lägg till rad
            </button>
        }
    </div>
    <div class="card-body">
        @if (ActionPlan?.Items?.Any() == true)
        {
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th style="width: 100px;">Prioritering</th>
                            <th style="width: 200px;">Modul/del</th>
                            <th>Aktivitet</th>
                            <th style="width: 150px;">Planerad leverans</th>
                            <th style="width: 120px;">Avklarad</th>
                            @if (IsAdminMode)
                            {
                                <th style="width: 100px;">Åtgärder</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var (item, index) in ActionPlan.Items.OrderBy(i => i.SortOrder).Select((item, index) => (item, index)))
                        {
                            <tr>
                                <td>
                                    @if (IsAdminMode)
                                    {
                                        <input type="number" class="form-control form-control-sm" 
                                               @bind="item.Priority" 
                                               @bind:after="OnItemChanged"
                                               min="1" max="99" />
                                    }
                                    else
                                    {
                                        @item.Priority
                                    }
                                </td>
                                <td>
                                    @if (IsAdminMode)
                                    {
                                        <input type="text" class="form-control form-control-sm" 
                                               @bind="item.Module" 
                                               @bind:after="OnItemChanged"
                                               placeholder="Modul/del" />
                                    }
                                    else
                                    {
                                        @item.Module
                                    }
                                </td>
                                <td>
                                    @if (IsAdminMode)
                                    {
                                        <textarea class="form-control form-control-sm" 
                                                  @bind="item.Activity" 
                                                  @bind:after="OnItemChanged"
                                                  rows="2" 
                                                  placeholder="Beskrivning av aktivitet"></textarea>
                                    }
                                    else
                                    {
                                        @item.Activity
                                    }
                                </td>
                                <td>
                                    @if (IsAdminMode)
                                    {
                                        <input type="text" class="form-control form-control-sm" 
                                               @bind="item.PlannedDelivery" 
                                               @bind:after="OnItemChanged"
                                               placeholder="Q2 2024" />
                                    }
                                    else
                                    {
                                        @item.PlannedDelivery
                                    }
                                </td>
                                <td>
                                    @if (IsAdminMode)
                                    {
                                        <input type="text" class="form-control form-control-sm" 
                                               @bind="item.Completed" 
                                               @bind:after="OnItemChanged"
                                               placeholder="Q1 2024" />
                                    }
                                    else
                                    {
                                        @item.Completed
                                    }
                                </td>
                                @if (IsAdminMode)
                                {
                                    <td>
                                        <div class="btn-group" role="group">
                                            @if (index > 0)
                                            {
                                                <button type="button" class="btn btn-outline-secondary btn-sm" 
                                                        @onclick="() => MoveItem(index, -1)" title="Flytta upp">
                                                    <i class="fa-solid fa-arrow-up"></i>
                                                </button>
                                            }
                                            @if (index < ActionPlan.Items.Count - 1)
                                            {
                                                <button type="button" class="btn btn-outline-secondary btn-sm" 
                                                        @onclick="() => MoveItem(index, 1)" title="Flytta ner">
                                                    <i class="fa-solid fa-arrow-down"></i>
                                                </button>
                                            }
                                            <button type="button" class="btn btn-outline-danger btn-sm" 
                                                    @onclick="() => RemoveItem(index)" title="Ta bort">
                                                <i class="fa-solid fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center text-muted py-4">
                <i class="fa-solid fa-table fa-2x mb-2"></i>
                <p>Ingen handlingsplan har lagts till än.</p>
                @if (IsAdminMode)
                {
                    <button type="button" class="btn btn-primary" @onclick="AddNewItem">
                        <i class="fa-solid fa-plus me-1"></i> Lägg till första raden
                    </button>
                }
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public ActionPlanTableViewModel? ActionPlan { get; set; }
    [Parameter] public bool IsAdminMode { get; set; } = false;
    [Parameter] public EventCallback OnChanged { get; set; }

    private void AddNewItem()
    {
        if (ActionPlan == null)
        {
            ActionPlan = new ActionPlanTableViewModel { Items = new List<ActionPlanItem>() };
        }

        var newItem = new ActionPlanItem
        {
            Priority = ActionPlan.Items.Count + 1,
            SortOrder = ActionPlan.Items.Count,
            Module = "",
            Activity = "",
            PlannedDelivery = "",
            Completed = ""
        };

        ActionPlan.Items.Add(newItem);
        OnItemChanged();
    }

    private void RemoveItem(int index)
    {
        if (ActionPlan?.Items != null && index >= 0 && index < ActionPlan.Items.Count)
        {
            ActionPlan.Items.RemoveAt(index);
            // Uppdatera SortOrder för alla items
            for (int i = 0; i < ActionPlan.Items.Count; i++)
            {
                ActionPlan.Items[i].SortOrder = i;
            }
            OnItemChanged();
        }
    }

    private void MoveItem(int index, int direction)
    {
        if (ActionPlan?.Items == null || index < 0 || index >= ActionPlan.Items.Count)
            return;

        var newIndex = index + direction;
        if (newIndex < 0 || newIndex >= ActionPlan.Items.Count)
            return;

        var item = ActionPlan.Items[index];
        ActionPlan.Items.RemoveAt(index);
        ActionPlan.Items.Insert(newIndex, item);

        // Uppdatera SortOrder
        for (int i = 0; i < ActionPlan.Items.Count; i++)
        {
            ActionPlan.Items[i].SortOrder = i;
        }

        OnItemChanged();
    }

    private async Task OnItemChanged()
    {
        if (OnChanged.HasDelegate)
        {
            await OnChanged.InvokeAsync();
        }
    }
}